@model IEnumerable<Ads.Domain.Entities.Concrete.Advert>

@{
    ViewData["Title"] = "Adverts";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h1>Adverts</h1>

<p>
    <a class="btn btn-outline-primary" asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Username
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubCategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OnSale)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClickCount)
            </th>
            <th>
                Comments
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeletedDate)
            </th>


            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.User != null)
                    {
                        @Html.DisplayFor(modelItem => item.User.Username)
                    }
                    else
                    {
                        <text>No User</text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @if (ViewBag.CategoryId != null)
                    {
                        var categoryId = item.CategoryId.ToString();
                        var categoryList = ViewBag.CategoryId as SelectList;
                        var categoryItem = categoryList?.FirstOrDefault(x => x.Value == categoryId);

                        if (categoryItem != null)
                        {
                            @categoryItem.Text
                        }
                        else
                        {
                            <text>No Category</text>
                        }
                    }
                    else
                    {
                        <text>No CategoryId List</text>
                    }
                </td>
                <td>
                    @if (ViewBag.SubCategoryId != null)
                    {
                        var subCategoryId = item.SubCategoryId.ToString();
                        var subCategoryList = ViewBag.SubCategoryId as SelectList;
                        var subCategoryItem = subCategoryList?.FirstOrDefault(x => x.Value == subCategoryId);

                        if (subCategoryItem != null)
                        {
                            @subCategoryItem.Text
                        }
                        else
                        {
                            <text>No SubCategory</text>
                        }
                    }
                    else
                    {
                        <text>No SubCategoryId List</text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OnSale)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClickCount)
                </td>
                <td>
                    @if (item.AdvertComments != null && item.AdvertComments.Any())
                    {
                        foreach (var comment in item.AdvertComments)
                        {
                            <div>
                                @Html.DisplayFor(modelItem => comment.Comment)
                            </div>
                        }
                    }
                    else
                    {
                        <text>No Comments</text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeletedDate)
                </td>

                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
