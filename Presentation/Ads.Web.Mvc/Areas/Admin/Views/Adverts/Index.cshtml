@model IEnumerable<Ads.Domain.Entities.Concrete.Advert>

@{
    ViewData["Title"] = "Adverts";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<style>

    .advert-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .advert-table th, .advert-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

    .advert-images {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .advert-image {
        width: 100%; /* Resim genişliği */
        height: auto; /* Resim yüksekliği otomatik ayarlanacak */
        border: 1px solid #ddd;
        margin-bottom: 5px;
    }

    .btn-container {
        display: flex;
        justify-content: center; /* Butonları yatayda ortala */
        align-items: center; /* Butonları dikeyde ortala */
        margin-top: 10px; /* İhtiyaca göre ayarla */
    }

    .btn {
        margin: 0 5px; /* Butonlar arasındaki boşluk */
    }

</style>


<h1>Adverts</h1>

<p>
    <a class="btn btn-outline-primary" asp-action="Create">Create New</a>
</p>
<table class="advert-table">
    <thead>
        <tr>
            <th>Advert Images</th>
            <th>Username</th>
            <th>Title</th>
            <th>Description</th>
            <th>CategoryId</th>
            <th>SubCategoryId</th>
            <th>Type</th>
            <th>OnSale</th>
            <th>Price</th>
            <th>ClickCount</th>
            <th>Comments</th>
            <th>CreatedDate</th>
            <th>UpdatedDate</th>
            <th>DeletedDate</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="advert-images">
                        @foreach (var image in item.AdvertImages)
                        {
                            <img class="advert-image" src="/Img/AdvertImages/@image.AdvertImagePath" alt="" />
                        }
                    </div>
                </td>
                <td>
                    @if (item.User != null)
                    {
                        @Html.DisplayFor(modelItem => item.User.Username)
                    }
                    else
                    {
                        <text>No User</text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @if (ViewBag.CategoryId != null)
                    {
                        var categoryId = item.CategoryId.ToString();
                        var categoryList = ViewBag.CategoryId as SelectList;
                        var categoryItem = categoryList?.FirstOrDefault(x => x.Value == categoryId);

                        if (categoryItem != null)
                        {
                            @categoryItem.Text
                        }
                        else
                        {
                            <text>No Category</text>
                        }
                    }
                    else
                    {
                        <text>No CategoryId List</text>
                    }
                </td>
                <td>
                    @if (ViewBag.SubCategoryId != null)
                    {
                        var subCategoryId = item.SubCategoryId.ToString();
                        var subCategoryList = ViewBag.SubCategoryId as SelectList;
                        var subCategoryItem = subCategoryList?.FirstOrDefault(x => x.Value == subCategoryId);

                        if (subCategoryItem != null)
                        {
                            @subCategoryItem.Text
                        }
                        else
                        {
                            <text>No SubCategory</text>
                        }
                    }
                    else
                    {
                        <text>No SubCategoryId List</text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OnSale)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClickCount)
                </td>
                <td>
                    @if (item.AdvertComments != null && item.AdvertComments.Any())
                    {
                        foreach (var comment in item.AdvertComments)
                        {
                            <div>
                                @Html.DisplayFor(modelItem => comment.Comment)
                            </div>
                        }
                    }
                    else
                    {
                        <text>No Comments</text>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeletedDate)
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                    <a class="btn btn-danger mt-2" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

